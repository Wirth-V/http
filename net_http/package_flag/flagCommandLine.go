/*
flag.CommandLine в языке программирования Go представляет собой глобальный набор
флагов по умолчанию для программы. Этот объект типа *flag.FlagSet предоставляет
методы для определения и использования флагов командной строки. Использование
flag.CommandLine облегчает работу с флагами, делая их доступными из любого
места в программе.

Прежде чем понять flag.CommandLine, полезно разобраться с тем, что такое флаги.
В программировании, флаги - это аргументы командной строки, которые позволяют
программе принимать на вход различные параметры. Например, при запуске программы
вы можете передать флаг -name John, чтобы указать имя пользователя.

Пример использования flag.CommandLine:
*/

// Пример использования программы:$ go run flagCommandLine.go -name John
package main

import (
	"flag"
	"fmt"
)

func main() {
	// Используем flag.CommandLine для добавления флага
	flag.String("name", "Guest", "Specify your name")

	// Парсинг командной строки
	flag.Parse()

	// Получение значения флага
	name := flag.String("name", "Guest", "Specify your name")

	// Вывод результатов
	fmt.Printf("Hello, %s!\n", *name)
}

/*
Здесь flag.String используется для определения строкового флага с именем "name".
Затем вызывается flag.Parse(), чтобы проанализировать командную строку и
прочитать переданные флаги. Наконец, flag.String используется снова для
получения значения флага.

flag.CommandLine предоставляет возможность добавления, определения и
использования флагов без явного создания объекта *flag.FlagSet. Он может быть
использован для доступа к глобальным флагам из любой части программы, что делает
его удобным для простых случаев.

Важно отметить, что при использовании flag.CommandLine есть некоторые
ограничения, и в некоторых случаях создание собственного объекта *flag.FlagSet
может быть более удобным.
*/
